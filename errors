==128039== Memcheck, a memory error detector
==128039== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==128039== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==128039== Command: ./vm
==128039== 
==128039== Invalid read of size 1
==128039==    at 0x4C3236C: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==128039==    by 0x53AA688: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA821: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x406785: VM::FileBuffer::type(char) (file_buffer.cc:23)
==128039==    by 0x4045CF: VM::InsertCommand::doTheCommand(VM::Controller&) const (insert_command.cc:8)
==128039==    by 0x405977: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:10)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039==  Address 0x614167f is 1 bytes before a block of size 31 alloc'd
==128039==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==128039==    by 0x53A9CFA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA6CF: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA821: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x406785: VM::FileBuffer::type(char) (file_buffer.cc:23)
==128039==    by 0x4045CF: VM::InsertCommand::doTheCommand(VM::Controller&) const (insert_command.cc:8)
==128039==    by 0x405977: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:10)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039== 
==128039== Invalid write of size 1
==128039==    at 0x4C32372: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==128039==    by 0x53AA688: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA821: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x406785: VM::FileBuffer::type(char) (file_buffer.cc:23)
==128039==    by 0x4045CF: VM::InsertCommand::doTheCommand(VM::Controller&) const (insert_command.cc:8)
==128039==    by 0x405977: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:10)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039==  Address 0x614167f is 1 bytes before a block of size 31 alloc'd
==128039==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==128039==    by 0x53A9CFA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA6CF: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA821: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x406785: VM::FileBuffer::type(char) (file_buffer.cc:23)
==128039==    by 0x4045CF: VM::InsertCommand::doTheCommand(VM::Controller&) const (insert_command.cc:8)
==128039==    by 0x405977: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:10)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039== 
==128039== Invalid write of size 1
==128039==    at 0x53AA6F0: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x53AA821: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==128039==    by 0x406785: VM::FileBuffer::type(char) (file_buffer.cc:23)
==128039==    by 0x4045CF: VM::InsertCommand::doTheCommand(VM::Controller&) const (insert_command.cc:8)
==128039==    by 0x405977: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:10)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039==  Address 0x6111d20 is 0 bytes after a block of size 32 alloc'd
==128039==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==128039==    by 0x407427: __gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) (new_allocator.h:104)
==128039==    by 0x4072E4: std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned long) (alloc_traits.h:491)
==128039==    by 0x407077: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:170)
==128039==    by 0x406DA6: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_create_storage(unsigned long) (stl_vector.h:185)
==128039==    by 0x406C34: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base(unsigned long, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:136)
==128039==    by 0x406ADF: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(unsigned long, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:278)
==128039==    by 0x4064D6: VM::FileBuffer::FileBuffer() (file_buffer.cc:8)
==128039==    by 0x401FC7: std::_MakeUniq<VM::FileBuffer>::__single_object std::make_unique<VM::FileBuffer>() (unique_ptr.h:768)
==128039==    by 0x401B71: VM::Application::Application(int, char**) (application.cc:19)
==128039==    by 0x401AC8: main (application.cc:7)
==128039== 
==128039== Invalid read of size 8
==128039==    at 0x405988: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:11)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039==  Address 0x6111c8020 is not stack'd, malloc'd or (recently) free'd
==128039== 
==128039== 
==128039== Process terminating with default action of signal 11 (SIGSEGV)
==128039==  Access not within mapped region at address 0x6111C8020
==128039==    at 0x405988: VM::MutateCommand::doCommand(VM::Controller&) (mutate_command.cc:11)
==128039==    by 0x40610D: VM::InsertMode::processChar(char) (insert_mode.cc:10)
==128039==    by 0x405D8B: VM::Controller::getAndProcessChar() (controller.cc:8)
==128039==    by 0x401CAD: VM::Application::run() (application.cc:23)
==128039==    by 0x401AD7: main (application.cc:8)
==128039==  If you believe this happened as a result of a stack
==128039==  overflow in your program's main thread (unlikely but
==128039==  possible), you can try to increase the size of the
==128039==  main thread stack using the --main-stacksize= flag.
==128039==  The main thread stack size used in this run was 8388608.
==128039== 
==128039== HEAP SUMMARY:
==128039==     in use at exit: 245,455 bytes in 156 blocks
==128039==   total heap usage: 180 allocs, 24 frees, 255,310 bytes allocated
==128039== 
==128039== LEAK SUMMARY:
==128039==    definitely lost: 168,615 bytes in 137 blocks
==128039==    indirectly lost: 0 bytes in 0 blocks
==128039==      possibly lost: 1,663 bytes in 3 blocks
==128039==    still reachable: 75,177 bytes in 16 blocks
==128039==         suppressed: 0 bytes in 0 blocks
==128039== Rerun with --leak-check=full to see details of leaked memory
==128039== 
==128039== For counts of detected and suppressed errors, rerun with: -v
==128039== ERROR SUMMARY: 44673 errors from 4 contexts (suppressed: 0 from 0)
